{"version":3,"sources":["redux/forms/forms.js","redux/reducers/authReducers.js","redux/actions/types.js","redux/reducers/postReducer.js","redux/reducers/recentPostsReducer.js","redux/reducers/myPostReducer.js","components/HomeComponent/HomeComponent.js","components/HeaderComponent/HeaderComponent.js","components/FooterComponent/FooterComponent.js","components/LoadingComponent/LoadingComponent.js","components/PostComponent/PostComponent.js","components/ListPostsComponent/ListPostsComponent.js","components/AdminDashboardComponent/AdminDashboardComponent.js","components/UserDashboardComponent/UserDashboardComponent.js","components/AddPostComponent/AddPostComponent.js","components/PostDetailComponent/PostDetailComponent.js","components/termsofservice.js","redux/actions/postActions.js","redux/actions/authActions.js","routes/PrivateRoute.js","components/MainComponent.js","App.js","redux/store/configureStore.js","registerServiceWorker.js","index.js"],"names":["InitialFeedback","posttitle","for","bedrooms","bathrooms","garage","lounge","price","priceUnit","area","areaUnit","address","contact","city","description","ContactForm","name","contactNumber","emailAddress","message","initialState","isAuthenticated","user","loading","authReducers","state","arguments","length","undefined","action","type","Object","objectSpread","isEmpty","payload","profile","isLoading","errMess","posts","postReducer","concat","toConsumableArray","recent","recentPostsReducer","myPosts","myPostReducer","filter","prop","_id","Home","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","islamabad","rawalpindi","sale","rent","_this2","axios","get","then","response","setState","data","console","log","catch","error","react_default","a","createElement","Jumbotron","fluid","ID","style","textAlign","color","Container","CardDeck","Card","className","Img","src","alt","ImgOverlay","Component","HeaderComponent","toggleModal","isModalOpen","toggleSignUpModal","isSignUpModalOpen","toggleNav","isNavOpen","handleLogin","event","preventDefault","userData","email","loginemail","value","password","loginpassword","loginUser","auth","handleSignUp","password2","newUser","registerUser","alert","logout","logoutUser","react","reactstrap_es","dark","expand","backgroundColor","NavLink","to","onClick","isOpen","navbar","toggle","onSubmit","id","innerRef","input","placeholder","Footer","title","Link","textDecoration","react_mdl_lib","margin","Loading","role","PostComponent","_ref","LoadingComponent_Loading","map","post","width","variant","image","Body","Title","Text","genre","platform","developer","esrb","condition","date","ListPostsComponent","onChangePlatform","target","filterByPlatform","filteredPosts","filteredByCondition","filteredByPlatform","onChangeCondition","filterByCondition","filteredByFor","onChangeText","text","filterByText","toLowerCase","includes","addonType","onChange","components_PostComponent_PostComponent","AdminDashboard","UserDashboardComponent","handleRemove","val","removePost","_this$props","required","maxLength","len","minLength","isNumber","isNaN","Number","AddPostComponent","handleSubmit","values","imageFile","latitude","longitude","formData","FormData","append","addImageToServer","addPost","resetAddPostForm","imageHandler","files","prevState","getLocation","navigator","geolocation","getCurrentPosition","position","coords","lib","model","htmlFor","md","validators","show","messages","select","defaultValue","file","accept","textarea","rows","size","offset","validEmail","test","PostDetailComponent","reciever","sendEmailToOwner","resetEmailOwnerForm","height","dist_default","format","outline","TermsOfService","padding","fontSize","fetchPosts","dispatch","postsLoading","getCurrentUser","addPosts","postsFailed","addNewPost","fetchRecentPosts","recentPostsLoading","addRecentPosts","recentPostsFailed","fetchMyPosts","myPostsLoading","res","status","addMyPosts","err","myPostsFailed","removeMyPost","setCurrentUser","userId","setUserLoading","localStorage","getItem","JSON","parse","connect","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Main","components_HeaderComponent_HeaderComponent","scroll","Switch","exact","path","HomeComponent","recentPosts","components_ListPostsComponent_ListPostsComponent","routes_PrivateRoute","components_UserDashboardComponent_UserDashboardComponent","components_AddPostComponent_AddPostComponent","match","components_PostDetailComponent_PostDetailComponent","params","termsofservice","FooterComponent","withRouter","setItem","stringify","removeItem","newPost","headers","content-type","actions","reset","delete","store","createStore","combineReducers","authReducer","createForms","compose","applyMiddleware","thunk","logger","App","es","BrowserRouter","MainComponent","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.70787122.chunk.js","sourcesContent":["export const InitialFeedback = {\n    posttitle: '',\n    for: 'Sale',\n    bedrooms: '',\n    bathrooms: '',\n    garage: false,\n    lounge: false,\n    price:  '',\n    priceUnit:'Lac',\n    area:'',\n    areaUnit:'Marla',\n    address:'',\n    contact:'',\n    city:'Rawalpindi',\n    description: ''\n};\nexport const ContactForm = {\n  name:'',\n  contactNumber:'',\n  emailAddress:'',\n  message:''\n};","import * as ActionTypes from \"../actions/types\";\nimport isEmpty from 'is-empty';\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ActionTypes.SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case ActionTypes.USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        case ActionTypes.GET_CURRENT_USER:\n            return {\n                ...state,\n                profile: action.payload,\n                loading: false\n            };\n        default:\n            return state;\n    }\n}","\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const GET_CURRENT_USER = \"GET_CURRENT_USER\";\n\nexport const PROPERTY_LOADING = \"PROPERTY_LOADING\";\nexport const PROPERTY_ERROR = \"PROPERTY_ERROR\";\nexport const ADD_PROPERTIES = \"ADD_PROPERTIES\";\nexport const ADD_PROPERTY = \"ADD_PROPERTY\";\n\nexport const ADD_RECENT = \"ADD_RECENT\";\nexport const RECENT_LOADING = \"RECENT_LOADING\";\nexport const RECENT_FAILED = \"RECENT_FAILED\";\n\nexport const ADD_MY_PROPERTIES = \"ADD_MY_PROPERTIES\";\nexport const REMOVE_MY_PROPERTY = \"REMOVE_MY_PROPERTY\";\nexport const MY_PROPERTIES_LOADING = \"MY_PROPERTIES_LOADING\";\nexport const MY_PROPERTIES_FAILED = \"MY_PROPERTIES_FAILED\";\n","import * as ActionTypes from \"../actions/types\";\n\nconst initialState = {\n    isLoading:true,\n    errMess:null,\n    posts:[]\n};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ActionTypes.ADD_PROPERTIES:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                posts: action.payload\n            };\n\n        case ActionTypes.ADD_PROPERTY:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                posts: [\n                    ...state.posts,\n                    action.payload\n                ]\n            };\n        case ActionTypes.PROPERTY_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                errMess: null,\n                posts: []\n            };\n        case ActionTypes.PROPERTY_ERROR:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload,\n                posts: []\n            };\n        default:\n            return state;\n    }\n}","import * as ActionTypes from \"../actions/types\";\n\nconst initialState = {\n    isLoading:true,\n    errMess:null,\n    recent:[]\n};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ActionTypes.ADD_RECENT:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                recent: action.payload\n            };\n\n        case ActionTypes.RECENT_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                errMess: null,\n                recent: []\n            };\n        case ActionTypes.RECENT_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload,\n                recent: []\n            };\n        default:\n            return state;\n    }\n}","import * as ActionTypes from \"../actions/types\";\n\nconst initialState = {\n    isLoading:true,\n    errMess:null,\n    myPosts:[]\n};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ActionTypes.ADD_MY_PROPERTIES:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                myPosts: action.payload\n            };\n\n        case ActionTypes.MY_PROPERTIES_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                errMess: null,\n                myPosts: []\n            };\n        case ActionTypes.MY_PROPERTIES_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload,\n                myPosts: []\n            };\n\n        case ActionTypes.REMOVE_MY_PROPERTY:\n            return{\n                ...state,\n                myPosts: state.myPosts.filter(prop => prop._id !== action.payload )\n            };\n        default:\n            return state;\n    }\n}","import React, {Component} from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Container from 'react-bootstrap/Container'\nimport axios from \"axios\";\n\n\nclass Home extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            city:{\n                islamabad:'0',\n                rawalpindi:'0'\n            },\n            for:{\n                sale:'0',\n                rent:'0'\n            }\n        }\n    }\n    componentWillMount() {\n        axios.get(\"/api/post/count/Playstation\")\n            .then((response) => {\n                this.setState({\n                    city:{\n                        ...this.state.city,\n                        islamabad: response.data\n                    }\n                },()=>{\n                    console.log(this.state)\n                })\n            }).catch((error) => {\n        });\n        axios.get(\"/api/post/count/Xbox\")\n            .then((response) => {\n                this.setState({\n                    city:{\n                        ...this.state.city,\n                        rawalpindi: response.data\n                    }\n                },()=>{\n                    console.log(this.state)\n                })\n            }).catch((error) => {\n        });\n        axios.get(\"/api/post/count/condition/New\")\n            .then((response) => {\n                this.setState({\n                    for:{\n                        ...this.state.for,\n                        sale: response.data\n                    }\n                },()=>{\n                    console.log(this.state)\n                })\n            }).catch((error) => {\n        });\n        axios.get(\"/api/post/count/condition/Used\")\n            .then((response) => {\n                this.setState({\n                    for:{\n                        ...this.state.for,\n                        rent: response.data\n                    }\n                },()=>{\n                    console.log(this.state)\n                })\n            }).catch((error) => {\n        });\n    }\n\n    \n    render() {\n        return (\n          <div> \n                 <Jumbotron fluid ID=\"main\" style={{ textAlign: 'center' }}>\n                    <h2 style={{ color: \"white\" }}>WELCOME TO UBERGAMES</h2>\n                    <h6 style={{ color: \"white\" }}>A community of gamers aiming to build the greatest\n                    resource for buying and selling video games. </h6>\n                 </Jumbotron>\n    \n            <Container fluid>\n                <CardDeck>\n                <Card className=\"bg-dark text-white\">\n                    <Card.Img src=\"https://cdn.mos.cms.futurecdn.net/MMwRCjVEaoJPP4dBBugWFY.jpg\" alt=\"Card image\" />\n                    <Card.ImgOverlay>\n                    </Card.ImgOverlay>\n                </Card>\n                <Card className=\"bg-dark text-white\">\n                    <Card.Img src=\"https://i.pcmag.com/imagery/lineups/06PiprC5eiYhlpaNS6N0sbP-1.1569492872.fit_lim.size_1200x630.jpg\" alt=\"Card image\" />\n                    <Card.ImgOverlay>\n                    </Card.ImgOverlay>\n                </Card>\n                <Card className=\"bg-dark text-white\">\n                    <Card.Img src=\"https://fullsync.co.uk/wp-content/uploads/2020/03/Video-game-Controllers.jpg\" alt=\"Card image\" />\n                    <Card.ImgOverlay>\n                    </Card.ImgOverlay>\n                </Card>\n                </CardDeck>\n            </Container>\n         </div>\n        )\n      }\n}\n\nexport default Home;","import React, {Component, Fragment} from 'react';\nimport {\n    Collapse, Navbar, NavbarToggler, Nav, NavItem,\n    Button, Modal, ModalHeader, ModalBody, FormGroup, Label, Input\n} from 'reactstrap';\nimport {NavLink } from 'react-router-dom';\n\n\nclass HeaderComponent extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isNavOpen: false,\n            isModalOpen: false,\n            isSignUpModalOpen: false,\n            toggleSignUpModal:false\n        }\n    }\n\n    toggleModal =()=>{\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    };\n    toggleSignUpModal=()=>{\n        this.setState({\n            isSignUpModalOpen: !this.state.isSignUpModalOpen\n        })\n    };\n    toggleNav = ()=> {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    };\n    handleLogin = (event)=>{\n        event.preventDefault();\n        this.toggleModal();\n        const userData = {\n            email: this.loginemail.value,\n            password: this.loginpassword.value\n        };\n        this.props.loginUser(userData);\n        console.log(this.props.auth);\n\n    };\n    handleSignUp = (event)=>{\n        event.preventDefault();\n        if (this.password.value === this.password2.value){\n            const newUser = {\n                name: this.name.value,\n                email: this.email.value,\n                password: this.password.value,\n            };\n            this.props.registerUser(newUser);\n            this.toggleSignUpModal();\n        }\n        else {\n            alert('Password Does not Match');\n        }\n\n    };\n    logout =(event)=>{\n        this.props.logoutUser();\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <Navbar dark expand=\"md\" className=\"header-color\" style={{backgroundColor: 'black'}}>\n                    <NavLink to='/' className=\"navbar-brand\">Uber Games</NavLink>\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem >\n                                <NavLink to=\"/list\" className=\"nav-link\">\n                                    Shop\n                                </NavLink>\n                            </NavItem>\n                            {\n                                this.props.auth.isAuthenticated ?\n                                  <Fragment>\n                                      <NavItem >\n                                          <NavLink to=\"/post/add\" className=\"nav-link\">\n                                            Add New Listing\n                                          </NavLink>\n                                      </NavItem>\n                                      <NavItem >\n                                          <NavLink to=\"/user/dashboard\" className=\"nav-link\">\n                                            My Posts\n                                          </NavLink>\n                                      </NavItem>\n                                      <NavItem className=\"nav-link\" onClick={this.logout}>\n                                          Logout\n                                      </NavItem>\n                                  </Fragment>\n                                    :\n                                    <Fragment >\n                                        <NavItem className=\"mr-1 nav-link\"  onClick={this.toggleSignUpModal}>\n                                            Sign Up\n                                        </NavItem>\n                                        <NavItem className=\"nav-link\" onClick={this.toggleModal}>\n                                            Sign In\n                                        </NavItem>\n                                    </Fragment>\n                            }\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} className=\"modal-sm\">\n                    <ModalHeader className=\"m-auto\">Sign In</ModalHeader>\n                    <ModalBody>\n                        <form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Input type=\"email\" id=\"loginemail\" name=\"loginemail\"\n                                       innerRef={(input) => this.loginemail = input}\n                                       placeholder=\"Email\"\n\n                                />\n                                <Input type=\"password\" id=\"loginpassword\" name=\"loginpassword\"\n                                       innerRef={(input) => this.loginpassword = input}\n                                       placeholder=\"Password\"\n                                />\n                                <Label className=\"small\">Don't Have an account? <span className=\"link-green\" onClick={this.toggleSignUpModal}>sign up</span></Label>\n                            </FormGroup>\n                            <Button className=\"btn btn-block btn-green\" type=\"submit\" value=\"submit\" >Sign In</Button>\n                        </form>\n                    </ModalBody>\n                </Modal>\n                <Modal isOpen={this.state.isSignUpModalOpen} toggle={this.toggleSignUpModal} className=\"modal-sm\">\n                    <ModalHeader className=\"m-auto\">Sign In</ModalHeader>\n                    <ModalBody>\n                        <form onSubmit={this.handleSignUp}>\n                            <FormGroup>\n                                <Input type=\"text\" id=\"name\" name=\"name\"\n                                       innerRef={(input) => this.name = input}\n                                       placeholder=\"Your Name\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input type=\"email\" id=\"email\" name=\"email\"\n                                       innerRef={(input) => this.email = input}\n                                       placeholder=\"Email\"\n\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                               innerRef={(input) => this.password = input}\n                                               placeholder=\"Password\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input type=\"password\" id=\"password2\" name=\"password2\"\n                                       innerRef={(input) => this.password2 = input}\n                                       placeholder=\"Confirm Password\"\n                                />\n                            </FormGroup>\n                            <Button className=\"btn btn-block btn-green\" type=\"submit\" value=\"submit\" >Sign Up</Button>\n                        </form>\n                    </ModalBody>\n                </Modal>\n            </Fragment>\n        );\n    }\n}\n\nexport default HeaderComponent;","import React from 'react';\nimport {NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport {  Navigation} from 'react-mdl';\n//import TermsOfService from 'termsofservice';\n\nconst Footer = props => (\n\n   <div className=\"header-color\" style={{backgroundColor: 'black'}} title={<Link style={{textDecoration: 'none', color: 'white',}} to=\"/\">UberGames</Link>}>\n        <Navigation>\n            <NavLink to=\"/termsofservice\" style={{textDecoration: 'none', color: 'white' ,  margin: \"auto\" }}>Terms of Service &copy; 2020 </NavLink>\n        </Navigation>\n    </div>\n);\n\nexport default Footer;","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border text-danger lg-spinner \" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    )\n};","import React from 'react';\nimport { Loading } from '../LoadingComponent/LoadingComponent';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card'\n\nconst PostComponent = ({posts, isLoading, errMess})=>{\n    if(isLoading){\n        return(\n            <div className=\"col-12 col-md\">\n                <Loading/>\n            </div>\n\n        );\n    }\n    else if (errMess){\n        return(\n            <div className=\"col-12 col-md m-5 d-flex justify-content-center\">\n                <h4 className=\"text-danger\">{errMess}</h4>\n            </div>\n\n        );\n    }\n    else {\n        return (\n            posts.map(post =>{\n            return ( \n            <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src={`/uploads/${post.image}`} alt=\"not image available\"/>\n                <Card.Body>\n                    <Card.Title>Game Name: {post.posttitle}</Card.Title>\n                    <Card.Text>Genre: {post.genre}</Card.Text>\n                    <Card.Text>Platform: {post.platform}</Card.Text>\n                    <Card.Text>Developer: {post.developer}</Card.Text>\n                    <Card.Text>Esrb rating: {post.esrb}</Card.Text>\n                    <Card.Text>Price: {post.priceUnit} {post.price}</Card.Text>\n                    <Card.Text>Condition: {post.condition}</Card.Text>\n                    <Card.Text>Description: {post.description}</Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">Last updated {post.date}</small>\n                    <Link to={`/post/${post._id}`} className=\"btn btn-block btn-green mt-2\">View</Link>\n                </Card.Footer>\n            </Card>\n             )\n            })\n        );\n    }\n};\n\nexport default PostComponent;","import React, {Component} from 'react';\nimport {Input, InputGroup, InputGroupAddon, InputGroupText, Label} from \"reactstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport PostComponent from '../PostComponent/PostComponent';\nimport CardDeck from 'react-bootstrap/CardDeck'\n\n\nclass ListPostsComponent extends Component{\n    componentWillMount() {\n        this.setState({\n            post: this.props.posts,\n            filteredPosts: this.props.posts,\n            filteredByCondition:this.props.posts,\n            filteredByPlatform:this.props.posts\n        })\n    }\n    constructor(props){\n       super(props);\n       this.state={\n           text:'',\n           platform:'All',\n           condition:'All',\n           post:[],\n           filteredPosts:[],\n           filteredByCondition:[],\n           filteredByPlatform:[]\n       }\n   }\n    onChangePlatform = (event)=>{\n        this.setState({\n            platform:event.target.value\n        },()=>{\n            this.filterByPlatform();\n        });\n\n    };\n    filterByPlatform = ()=>{\n        this.setState({\n            filteredPosts: this.state.platform !== 'All' ? this.state.filteredByCondition.filter(prop => prop.platform === this.state.platform)  : this.state.filteredByCondition,\n            filteredByPlatform:this.state.platform !== 'All' ? this.state.filteredByCondition.filter(prop => prop.platform === this.state.platform)  : this.state.filteredByCondition\n        })\n    };\n    onChangeCondition = (event)=>{\n        this.setState({\n            condition:event.target.value\n        },()=>{\n            this.filterByCondition();\n        });\n    };\n    filterByCondition = ()=>{\n        this.setState({\n            filteredPosts: this.state.condition !== 'All' ?this.state.post.filter(prop => prop.condition === this.state.condition) : this.state.post,\n            filteredByFor:this.state.condition !== 'All' ?this.state.post.filter(prop => prop.condition === this.state.condition) : this.state.post\n        })\n    };\n    onChangeText = (event)=>{\n        this.setState({\n            text:event.target.value\n        }, ()=>{\n            this.filterByText()\n        })\n    };\n    filterByText = ()=>{\n        this.setState({\n            filteredPosts: this.state.text !== '' ? this.state.filteredByPlatform.filter(prop => prop.posttitle.toLowerCase().includes(this.state.text.toLowerCase()))  : this.state.filteredByPlatform\n        })\n    };\n    render() {\n        return(\n            <div>\n                    <div className=\"bg-green text-center p-4 mt-5\" >\n                        <Jumbotron style={{ textAlign: 'center', backgroundColor: 'transparent'}}>\n                            <h1>SHOP LISTINGS</h1>\n                            <h6>Search far and wide for games you've been wanting to get your hands on.</h6>\n                        </Jumbotron>\n                    </div>\n                    <div className=\"container mt-5\">\n                        <InputGroup className=\"form-group\">\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText>\n                                    <span className=\"fa fa-search\"/>\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <Input type=\"text\" placeholder=\"Search for Games...\" onChange={this.onChangeText} value={this.state.text}/>\n                        </InputGroup>\n                        <div className=\"form-inline\">\n                            <Label className=\"mr-1\">Condition</Label>\n                            <select className=\"form-control mr-2\" id=\"for\" onChange={this.onChangeCondition} value={this.state.condition}>\n                                <option>All</option>\n                                <option>New</option>\n                                <option>Used</option>\n                                <option>Refurbished</option>\n                            </select>\n                            <Label className=\"mr-1\">Platform</Label>\n                            <select className=\"form-control mr-2\" onChange={this.onChangePlatform} value={this.state.platform}>\n                                <option>All</option>\n                                <option>Xbox</option>\n                                <option>PlayStation</option>\n                                <option>Nintendo</option>\n                                <option>PC</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"container mt-5\">\n                    <CardDeck>\n                        <PostComponent posts={this.state.filteredPosts}\n                                           isLoading={this.props.isLoading}\n                                           errMess={this.props.errMess}\n                        />\n                    </CardDeck>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default ListPostsComponent;","import React, {Component, Fragment} from 'react';\n\n\n\nclass AdminDashboard extends Component {\n\n    render() {\n        return (\n            <Fragment >\n               <div >\n                    <h1>Admin Dashboard Component</h1>\n               </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default AdminDashboard;","import React, {Component} from 'react';\nimport {Loading} from \"../LoadingComponent/LoadingComponent\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport {Button} from \"reactstrap\";\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nclass UserDashboardComponent extends Component {\n    handleRemove = (val) => event => {\n        this.props.removePost(val);\n    };\n    render() {\n        const {myPosts, isLoading, errMess} =this.props;\n        if(isLoading){\n            return(\n                <div className=\"col-12 col-md p-5\">\n                    <Loading/>\n                </div>\n            );\n        }\n        else if (errMess){\n            return(\n                <div className=\"col-12 col-md m-5 d-flex justify-content-center\">\n                    <h4 className=\"text-danger\">{errMess}</h4>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"container pt-5\">\n                    <Jumbotron style={{ textAlign: 'center', backgroundColor: 'transparent' }}>\n                        <h1>My Post</h1>\n                        <h6>Here you can Manage your post.</h6>\n                    </Jumbotron>\n                   \n                        <CardDeck>\n                            { myPosts.length === 0 ?\n                                <div className=\"text-center p-4\" >\n                                    <h6>You Don't have any posts yet</h6>\n                                </div>\n                                :myPosts.map(post => {\n                                return (\n                                   \n                                   <Card style={{ width: '18rem' }}>\n                                        <Card.Img variant=\"top\" src={`/uploads/${post.image}`} alt=\"not image available\"/>\n                                        <Card.Body>\n                                            <Card.Title>Game Name: {post.posttitle}</Card.Title>\n                                            <Card.Text>Genre: {post.genre}</Card.Text>\n                                            <Card.Text>Platform: {post.platform}</Card.Text>\n                                            <Card.Text>Developer: {post.developer}</Card.Text>\n                                            <Card.Text>Esrb rating: {post.esrb}</Card.Text>\n                                            <Card.Text>Price: {post.priceUnit} {post.price}</Card.Text>\n                                            <Card.Text>Condition: {post.condition}</Card.Text>\n                                            <Card.Text>Description: {post.description}</Card.Text>\n                                        </Card.Body>\n                                        <Card.Footer>\n                                            <small className=\"text-muted\">Last updated {post.date}</small>\n                                            {/** \n                                            <Link to={`/post/${post._id}`} className=\"btn btn-block btn-green mt-2\">Remove</Link>\n                                            */}\n                                            <Button className=\"btn btn-block btn-green mt-2\" onClick={this.handleRemove(post._id)}>Remove</Button>\n                                        </Card.Footer>\n                                    </Card>\n                                )\n                            })}\n\n                        </CardDeck>      \n                </div>\n            );\n        }\n    }\n}\n\n\n\nexport default UserDashboardComponent;","import React, {Component} from 'react';\nimport { Control, Form, Errors } from \"react-redux-form\";\nimport {Button, Label, Col, Row } from 'reactstrap';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst isNumber = val => !isNaN(Number(val));\n\n\nclass AddPostComponent extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            image:'',\n            imageFile:null,\n            latitude:'',\n            longitude:''\n        }\n    }\n    componentDidMount() {\n        this.props.resetAddPostForm();\n    }\n\n    handleSubmit = values => {\n        if (this.state.imageFile === null){\n            alert('Please add Image of Post');\n        }\n        else {\n            const val = {\n                ...values,\n                image: this.state.image,\n                latitude:this.state.latitude,\n                longitude:this.state.longitude,\n                email: this.props.auth.user.email\n            };\n            const formData = new FormData();\n            formData.append('image',this.state.imageFile);\n            this.props.addImageToServer(formData);\n            this.props.addPost(val);\n            this.props.resetAddPostForm();\n        }\n    };\n\n    imageHandler = (event) => {\n        if (event.target.files.length > 0)\n        {\n            this.setState(prevState=>({\n                image:event.target.files[0].name,\n                imageFile: event.target.files[0]\n            }));\n\n        }\n\n    };\n\n    getLocation=(event)=>{\n        if(!navigator.geolocation){\n            return alert('Location not Supported by your browser');\n        }\n\n\n        navigator.geolocation.getCurrentPosition((position)=>{\n            this.setState({\n                latitude:position.coords.latitude,\n                longitude:position.coords.longitude\n                });\n\n            alert('Got Your Location :D');\n        });\n\n    };\n\n    render() {\n        return (\n            <div className=\"container pt-5\">\n                <Jumbotron style={{ textAlign: 'center', backgroundColor: 'transparent' }}>\n                    <h1>ADD LISTING</h1>\n                    <h6>Got something you want to trade or sell? Tell us a bit about it.</h6>\n                </Jumbotron>\n                <div className=\"card \">\n                    <div className=\"card-body\">\n                        <Form model=\"addPost\" onSubmit={value => this.handleSubmit(value)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"posttitle\" md={2}>Game Title</Label>\n                                <Col md={6}>\n\n                                    <Control.text model=\".posttitle\" id=\"posttitle\" name=\"posttitle\"\n                                                  placeholder=\"Post Title\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, minLength: minLength(3), maxLength: maxLength(30)\n                                                  }}\n                                    />\n                                    <Errors model=\".posttitle\"\n                                            className=\"text-danger\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 3 characters',\n                                                maxLength: 'Must be less than 30 Characters'\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"for\" md={2}>Condition</Label>\n                                <Col md={6}>\n                                    <Control.select model=\".condition\" name=\"condition\" className=\"form-control\" defaultValue=\"New\">\n                                        <option>New</option>\n                                        <option>Used</option>\n                                        <option>Refurbished</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"genre\" md={2}>Genre</Label>\n                                <Col md={6}>\n                                    <Control.select model=\".genre\" name=\"genre\" className=\"form-control\" defaultValue=\"Action\">\n                                        <option>Action</option>\n                                        <option>Strategy</option>\n                                        <option>Fight</option>\n                                        <option>Role Playing</option>\n                                        <option>Simulation</option>\n                                        <option>Sports</option>\n                                        <option>Board Game</option>\n                                        <option>Horror Game</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"bathrooms\" md={2}>Developer</Label>\n                                <Col md={6}>\n                                    <Control.select model=\".developer\" name=\"developer\" className=\"form-control\" defaultValue=\"Action\">\n                                        <option>Overflow</option>\n                                        <option>3D Realms</option>\n                                        <option>42 Enterteinment</option>\n                                        <option>Capcom</option>\n                                        <option>Acclaim Studios Austin</option>\n                                        <option>Adventure Soft</option>\n                                        <option>AQ Interactive</option>\n                                        <option>Arc System Works</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"address\" md={2}>Esrb Rating</Label>\n                                <Col md={6}>\n\n                                    <Control.text model=\".esrb\" id=\"esrb\" name=\"posttitlesrbe\"\n                                                  placeholder=\"Esrb Rating\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, maxLength: maxLength(30)\n                                                  }}\n                                    />\n                                    <Errors model=\".esrb\"\n                                            className=\"text-danger\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                maxLength: 'Must be less than 30 Characters'\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"city\" md={2}>Platform</Label>\n                                <Col md={6}>\n                                    <Control.select model=\".platform\" name=\"platform\" className=\"form-control\" defaultValue=\"Rawalpindi\">\n                                        <option>Xbox</option>\n                                        <option>PlayStation</option>\n                                        <option>Nintendo</option>\n                                        <option>PC</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            \n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"images\" md={2}>Upload Images</Label>\n                                <Col md={6}>\n                                    <Control.file model=\"image1\" id=\"image1\" name=\"image1\"\n                                                  className=\"form-control-file mb-2\"\n                                                  accept=\"image/jpg, image/jpeg\"\n                                                  onChange={this.imageHandler}\n                                    />\n\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"price\" md={2}>Price</Label>\n                                <Col md={3}>\n                                    <Control.text model=\".price\" id=\"price\" name=\"price\"\n                                                  placeholder=\"Price\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required,isNumber\n                                                  }}\n                                    />\n                                    <Errors model=\".price\"\n                                            className=\"text-danger\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                isNumber: 'Must be Number'\n                                            }}\n                                    />\n                                </Col>\n                                <Col md={3}>\n                                    <Control.select model=\".priceUnit\" name=\"priceUnit\" className=\"form-control\" defaultValue=\"USD\">\n                                        <option>USD</option>\n                                        <option>EU</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"contact\" md={2}>Contact No</Label>\n                                <Col md={3}>\n                                    <Control.text model=\".contact\" id=\"contact\" name=\"contact\"\n                                                  placeholder=\"03*********\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required,isNumber, minLength: minLength(11), maxLength: maxLength(11)\n                                                  }}\n                                    />\n                                    <Errors model=\".contact\"\n                                            className=\"text-danger\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength:'Invalid Number',\n                                                maxLength:'Invalid Number',\n                                                isNumber: 'Must be Number'\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"description\" md={2} >Description</Label>\n                                <Col md={6}>\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\n                                                      rows=\"12\"\n                                                      className=\"form-control\"\n                                                      placeholder=\"Your Description goes here...\"\n                                                      validators={{\n                                                          required\n                                                      }}\n                                    />\n                                    <Errors model=\".description\"\n                                            className=\"text-danger\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:6, offset: 2}}>\n                                    <Button type=\"submit\" className=\"btn-block btn-green\">\n                                        Add Post\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default AddPostComponent;","import React, {Component} from 'react';\nimport Moment from 'react-moment';\nimport {Label, Button, Row, Col} from \"reactstrap\";\nimport {Errors, Control, Form} from \"react-redux-form\";\nimport {Loading} from \"../LoadingComponent/LoadingComponent\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst isNumber = val => !isNaN(Number(val));\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass PostDetailComponent extends Component{\n    handleSubmit= values => {\n        const val= {\n            ...values,\n            reciever:this.props.post.email\n        };\n        this.props.sendEmailToOwner(val);\n        this.props.resetEmailOwnerForm();\n    };\n\n    componentDidMount() {\n        this.props.resetEmailOwnerForm();\n    }\n\n    render() {\n        const {post ,isLoading, errMess} = this.props;\n        if(isLoading){\n            return(\n                <div className=\"col-12 col-md p-5\">\n                    <Loading/>\n                </div>\n\n            );\n        }\n        else if (errMess){\n            return(\n                <div className=\"col-12 col-md m-5 d-flex justify-content-center\">\n                    <h4 className=\"text-danger\">{errMess}</h4>\n                </div>\n\n            );\n        }\n        else {\n            return(\n                <div className=\"container pt-5\">\n                    <div className=\"card \">\n                        <div style={{ textAlign: 'center', backgroundColor: 'transparent'}}>\n                            <h3>Post Detail</h3>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className='col-12 col-md-5 '>\n                                    <img src={`/uploads/${post.image}`}  alt={post.posttitle} className=\"w-100\" height=\"400\"/>\n                                </div>\n                                <div className='col-12 col-md-7 '>\n                                    <h3>{post.posttitle}</h3>\n                                    <hr/>\n                                    <div className=\"row\">\n                                        <div className=\"col-12 col-md-6\">\n                                            <table className=\"table table-striped table-borderless\">\n                                                <thead>\n                                                <tr>\n                                                    <th>Details</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                <tr>\n                                                    <td>Condition:</td>\n                                                    <td>{post.condition}</td>\n\n                                                </tr>\n                                                <tr>\n                                                    <td>Esrb Rating:</td>\n                                                    <td>{post.esrb}</td>\n\n                                                </tr>\n                                                <tr>\n                                                    <td>Developer:</td>\n                                                    <td>{post.developer}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>Price:</td>\n                                                    <td>{`${post.priceUnit} ${post.price} `} </td>\n                                                </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        <div className=\"col-12 col-md-6\">\n                                            <table className=\"table table-striped table-borderless\">\n                                                <thead>\n                                                <tr>\n                                                    <th>&nbsp;</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                <tr>\n                                                    <td>Genre</td>\n                                                    <td>{post.genre}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>Added On:</td>\n                                                    <td><Moment format=\"MMM DD, YYYY\">{post.date}</Moment></td>\n                                                </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <hr/>\n                            <div className=\"row p-2\">\n                                <div className=\"col-12 col-md-7\">\n                                    <h5>Description</h5>\n                                    <hr/>\n                                    <p>{post.description}</p>\n                                </div>\n                                <div className=\"col-12 col-md-5\">\n                                    <h5>Contact Info</h5>\n                                    <hr/>\n                                    <div className=\"d-flex flex-row justify-content-around\">\n                                        <h6>Contact No: {post.contact}</h6>\n                                    </div>\n                                    <hr/>\n                                    <div>\n                                        <Form model=\"contact\" onSubmit={value => this.handleSubmit(value)}>\n                                            <Label className=\"font-weight-bold\">Contact Via Email</Label>\n                                            <Row className=\"form-group\">\n                                                <Col >\n                                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                                                  placeholder=\"Your Name\"\n                                                                  className=\"form-control\"\n                                                                  validators={{\n                                                                      required, minLength: minLength(3), maxLength: maxLength(20)\n                                                                  }}\n                                                    />\n                                                    <Errors model=\".name\"\n                                                            className=\"text-danger\"\n                                                            show=\"touched\"\n                                                            messages={{\n                                                                required: 'Required',\n                                                                minLength: 'Must be greater than 3 characters',\n                                                                maxLength: 'Must be less than 20 Characters'\n                                                            }}\n                                                    />\n\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Col >\n                                                    <Control.text model=\".contactNumber\" id=\"contactNumber\" name=\"contactNumber\"\n                                                                  placeholder=\"Your Phone Number\"\n                                                                  className=\"form-control\"\n                                                                  validators={{\n                                                                      required,minLength: minLength(11), maxLength: maxLength(11), isNumber\n                                                                  }}\n                                                    />\n                                                    <Errors model=\".contactNumber\"\n                                                            className=\"text-danger\"\n                                                            show=\"touched\"\n                                                            messages={{\n                                                                required: 'Required',\n                                                                minLength: 'Not Valid Number',\n                                                                maxLength: 'Not Valid Number',\n                                                                isNumber: 'Must be Number'\n                                                            }}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Col >\n                                                    <Control.text model=\".emailAddress\" id=\"emailAddress\" name=\"emailAddress\"\n                                                                  placeholder=\"Your Email\"\n                                                                  className=\"form-control\"\n                                                                  validators={{\n                                                                      required, validEmail\n                                                                  }}\n                                                    />\n                                                    <Errors model=\".emailAddress\"\n                                                            className=\"text-danger\"\n                                                            show=\"touched\"\n                                                            messages={{\n                                                                required: 'Required',\n                                                                validEmail: 'Invalid Email'\n                                                            }}\n                                                    />\n\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Col >\n\n                                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                                                      rows=\"5\"\n                                                                      className=\"form-control\"\n                                                                      placeholder=\"Your Message\"\n                                                                      validators={{\n                                                                          required\n                                                                      }}\n                                                    />\n                                                    <Errors model=\".message\"\n                                                            className=\"text-danger\"\n                                                            show=\"touched\"\n                                                            messages={{\n                                                                required: 'Required',\n                                                            }}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Col >\n                                                    <Button outline type=\"submit\" className=\"btn-block\" color=\"primary\">\n                                                        Send Email\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n};\n\nexport default PostDetailComponent;","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n// import Education from './education';\n// import Experience from './experience';\n// import Skills from './skills';\n\n\nclass TermsOfService extends Component {\n  render() {\n    return (\n      <div>\n        <h1 style={{ margin: \"auto\", width: \"50%\", padding: \"10px\" }}>Terms of Service</h1>\n\n        <h3 style={{ margin: \"auto\", width: \"50%\", padding: \"10px\" }}> 1. About UberGames </h3>\n\n        <p style={{ margin: \"auto\", width: \"50%\", padding: \"10px\", fontSize: \"20px\" }}>\n          Ubergames is a community of gamers aiming to build the greatest resource for buying and selling games. The platform’s objective is to connect consumers with sellers to negotiate the best deal on their video game purchase.\n          Any guidance we provide as part of our Services, such as pricing, shipping, listing, and sourcing is solely informational and you may decide to follow it or not. Also, while we may help facilitate the resolution of disputes through various programs, UberGames has no control over and does not guarantee: the existence, quality, safety or legality of items advertised; the truth or accuracy of users' content or listings; the ability of sellers to sell items; the ability of buyers to pay for items; or that a buyer or seller will actually complete a transaction or return an item.\n      </p>\n\n\n        <h3 style={{ margin: \"auto\", width: \"50%\", padding: \"10px\" }}> 2. Using UberGames </h3>\n        <p style={{ margin: \"auto\", width: \"50%\", padding: \"10px\", fontSize: \"20px\" }}>\n          In connection with using or accessing our Services you will not:\n          <br></br>\n        •\tpost, list or upload content or items in inappropriate categories or areas on our sites;\n        <br></br>\n        •\tbreach or circumvent any laws, regulations, third-party rights or our systems, Services, policies, or determinations of your account status;\n        <br></br>\n        •\tuse our Services if you are not able to form legally binding contracts (for example, if you are under 18 years old), or are temporarily or indefinitely suspended from using our Services, or are a person with whom transactions are prohibited under economic or trade sanctions;\n        <br></br>\n        •\tfail to pay for items purchased by you, unless you have a valid reason as set out in an UberGames policy, for example, the seller has materially changed the item's description after you bid, a clear typographical error is made, or you cannot contact the seller (see our Unpaid item policy);\n        <br></br>\n        •\tfail to deliver items sold by you, unless you have a valid reason as set out in an UberGames policy, for example, the buyer fails to comply with the posted terms in your listing or you cannot contact the buyer;\n        <br></br>\n        •\tmanipulate the price of any item or interfere with any other user's listings;\n        <br></br>\n        •\tpost false, inaccurate, misleading, deceptive, defamatory, or libelous content;\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default TermsOfService;","import axios from \"axios\";\nimport * as ActionTypes from \"./types\";\nimport {getCurrentUser} from \"./authActions\";\n\nexport const addPost = (newPost) => dispatch => {\n    axios.post(\"/api/uploads/post\",newPost)\n        .then((response) => {\n\n            dispatch(addNewPost(response.data));\n            dispatch(fetchRecentPosts());\n            alert(\"Post is successfully added\");\n        }).catch((error) => {\n    });\n};\nexport const fetchPosts = ()=>dispatch =>{\n    dispatch(postsLoading(true));\n    dispatch(getCurrentUser());\n    axios.get(\"/api/post/all\")\n        .then((response) => {\n            dispatch(addPosts(response.data));\n        }).catch((error) => {\n            dispatch(postsFailed(error.message));\n    });\n};\n\nexport const postsLoading = ()=>({\n    type: ActionTypes.PROPERTY_LOADING\n});\nexport const postsFailed = (errMess)=>({\n    type:ActionTypes.PROPERTY_ERROR,\n    payload:errMess\n});\n\n\nexport const addNewPost=(post)=>({\n    type: ActionTypes.ADD_PROPERTY,\n    payload: post\n});\nexport const addPosts=(posts)=>({\n    type: ActionTypes.ADD_PROPERTIES,\n    payload: posts\n});\n\nexport const fetchRecentPosts = ()=> dispatch =>{\n    dispatch(recentPostsLoading(true));\n    dispatch(getCurrentUser());\n    axios.get(\"/api/post/recent\")\n        .then((response) => {\n            dispatch(addRecentPosts(response.data));\n        }).catch((error) => {\n        dispatch(recentPostsFailed(error.message));\n    });\n};\n\nexport const recentPostsLoading = ()=>({\n    type: ActionTypes.RECENT_LOADING\n});\nexport const recentPostsFailed = (errMess)=>({\n    type:ActionTypes.RECENT_FAILED,\n    payload:errMess\n});\n\n\nexport const addRecentPosts=(post)=>({\n    type: ActionTypes.ADD_RECENT,\n    payload: post\n});\n\nexport const addImageToServer= ( image ) => dispatch =>{\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    };\n    axios.post(\"/api/uploads/image\",image,config)\n        .then((response) => {\n            console.log('Images Uploaded')\n        }).catch((error) => {\n    });\n};\n\nexport const sendEmailToOwner = (data)=> dispatch =>{\n    axios.post(\"/api/post/contact\",data)\n        .then((response) => {\n            alert('Email Sent :D');\n        }).catch((error) => {\n            console.log(error);\n    });\n};\nexport const fetchMyPosts = (email)=> dispatch => {\n    dispatch(myPostsLoading(true));\n    axios\n        .get(`/api/post/my/${email}`)\n        .then(res => {\n            if (res.status === 200){\n                dispatch(addMyPosts(res.data));\n            }\n\n        })\n        .catch(err => {\n            dispatch(myPostsFailed(err.message));\n        });\n};\nexport const removePost=(id)=>dispatch=>{\n    axios\n        .delete(`/api/post/my/delete/${id}`)\n        .then(res => {\n            if (res.status === 200){\n                dispatch(removeMyPost(id));\n                dispatch(fetchPosts());\n            }\n\n        })\n        .catch(err => {\n            console.log(JSON.stringify(err))\n        });\n};\n\nexport const addMyPosts = (posts) => ({\n    type: ActionTypes.ADD_MY_PROPERTIES,\n    payload: posts\n});\nexport const removeMyPost = (id) => ({\n    type:ActionTypes.REMOVE_MY_PROPERTY,\n    payload: id\n});\nexport const myPostsLoading = ()=>({\n    type: ActionTypes.MY_PROPERTIES_LOADING\n});\nexport const myPostsFailed = (errMess)=>({\n    type:ActionTypes.MY_PROPERTIES_FAILED,\n    payload:errMess\n});\n","import axios from \"axios\";\nimport {\n\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\nimport {fetchMyPosts} from \"./postActions\";\n// Register User\nexport const registerUser = (userData) => dispatch => {\n    axios\n        .post(\"/api/users/register\", userData)\n        .then(res => alert('Registered Successfully')) // re-direct to login on successful register\n        .catch(err =>\n            alert('Email Already Exist')\n        );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n    console.log(userData);\n    axios\n        .post(\"/api/users/login\", userData)\n        .then(res => {\n\n            localStorage.setItem(\"user\",JSON.stringify(res.data) );\n            dispatch(setCurrentUser(res.data));\n            dispatch(fetchMyPosts(res.data.email));\n            alert('Logged in Successfully');\n        })\n        .catch(err => {\n           alert(err.response.data.message);\n        });\n};\n// Set logged in user\nexport const setCurrentUser = userId => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: userId\n    };\n};\n// Get current user\nexport const getCurrentUser = () => dispatch => {\n    dispatch(setUserLoading());\n    if (localStorage.getItem(\"user\") != null){\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        dispatch(setCurrentUser(user));\n        dispatch(fetchMyPosts(user.email));\n    }\n\n};\n// User loading\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n\n\n    axios\n        .get(\"/api/users/logout\")\n        .then(res => {\n            if (res.status === 200){\n                dispatch(setCurrentUser({}));\n                localStorage.removeItem(\"user\");\n                alert('Logged out Successfully');\n            }\n\n        })\n        .catch(err => {\n            alert('Logout Failed');\n        });\n};\n\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/\" />\n            )\n        }\n    />\n);\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport HomePage from './HomeComponent/HomeComponent';\nimport Header from './HeaderComponent/HeaderComponent';\nimport Footer from './FooterComponent/FooterComponent';\nimport ListPostsComponent from './ListPostsComponent/ListPostsComponent';\nimport AdminDashboard from './AdminDashboardComponent/AdminDashboardComponent';\nimport UserDashboard from './UserDashboardComponent/UserDashboardComponent';\nimport AddPostComponent from \"./AddPostComponent/AddPostComponent\";\nimport PostDetail from './PostDetailComponent/PostDetailComponent';\nimport TermsOfService from './termsofservice';\nimport { loginUser, logoutUser, registerUser } from \"../redux/actions/authActions\";\nimport { Link } from 'react-router-dom';\nimport PrivateRoute from '../routes/PrivateRoute';\n\n\nimport {\n    addImageToServer,\n    addPost,\n    fetchPosts,\n    fetchRecentPosts, removePost,\n    sendEmailToOwner\n} from \"../redux/actions/postActions\";\nimport {actions} from \"react-redux-form\";\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        posts: state.posts,\n        recent:state.recent,\n        myPosts: state.myPosts\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    loginUser: (userData)=> dispatch(loginUser(userData)),\n    logoutUser: ()=>{dispatch(logoutUser())},\n    registerUser:(userData)=> dispatch(registerUser(userData)),\n    addPost:(newPost)=>dispatch(addPost(newPost)),\n    addImageToServer:(image)=>dispatch(addImageToServer(image)),\n    fetchPosts: ()=>{dispatch(fetchPosts())},\n    fetchRecentPosts:()=>{dispatch(fetchRecentPosts())},\n    resetAddPostForm: ()=> {dispatch(actions.reset('addPost'))},\n    resetEmailOwnerForm:()=>{dispatch(actions.reset('contact'))},\n    sendEmailToOwner:(data)=>{dispatch(sendEmailToOwner(data))},\n    removePost: (id) => dispatch(removePost(id))\n});\n\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchPosts();\n        this.props.fetchRecentPosts();\n    }\n\n    render() {\n\n        return (\n            <div>\n                \n                <Header  style={{backgroundColor: 'black'}} title={<Link style={{textDecoration: 'none', color: 'white',}} to=\"/\">UberGames</Link>} scroll\n                    loginUser={this.props.loginUser}\n                    registerUser={this.props.registerUser}\n                    logoutUser={this.props.logoutUser}\n                    auth={this.props.auth}\n                />\n                \n                <Switch>\n                    <Route exact path=\"/\" component={()=> <HomePage isLoading={this.props.posts.isLoading}\n                                                                    errMess={this.props.posts.errMess}\n                                                                    recentPosts={this.props.recent.recent}\n                                                        />}\n                    />\n\n                    <Route path=\"/list\" component={()=> <ListPostsComponent\n                                                            posts={this.props.posts.posts}\n                                                            isLoading={this.props.posts.isLoading}\n                                                            errMess={this.props.posts.errMess}\n                                                        />}\n                    />\n                    <PrivateRoute exact path=\"/admin/dashboard\" component={AdminDashboard}/>\n                    <PrivateRoute exact path=\"/user/dashboard\" component={()=><UserDashboard\n                                                                                myPosts={this.props.myPosts.myPosts}\n                                                                                isLoading={this.props.myPosts.isLoading}\n                                                                                errMess={this.props.myPosts.errMess}\n                                                                                removePost={this.props.removePost}\n                                                                                />}\n                    />\n                    <PrivateRoute path=\"/post/add\" component={() => <AddPostComponent\n                                                                    addPost={this.props.addPost}\n                                                                    addImageToServer={this.props.addImageToServer}\n                                                                    resetAddPostForm={this.props.resetAddPostForm}\n                                                                    auth={this.props.auth}\n                                                                />}\n                    />\n                    <Route path=\"/post/:id\" component={({match})=><PostDetail\n                        post={this.props.posts.posts.filter(post => post._id === match.params.id)[0]}\n                        isLoading={this.props.posts.isLoading}\n                        errMess={this.props.posts.errMess}\n                        resetEmailOwnerForm={this.props.resetEmailOwnerForm}\n                        sendEmailToOwner={this.props.sendEmailToOwner}\n                    />}\n                    />\n                    \n                    <Route exact path=\"/termsofservice\" component={()=> <TermsOfService/>}\n                    />\n                    \n                    <Redirect to=\"/\"/>\n                    \n\n                </Switch>\n                <Footer/>\n            </div>\n            \n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from \"./redux/store/configureStore\";\nimport Main from './components/MainComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider store={store}>\n          <BrowserRouter>\n              <Main/>\n          </BrowserRouter>\n        </Provider>\n    );\n  }\n}\n\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware,compose } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport {InitialFeedback, ContactForm} from \"../forms/forms\";\nimport authReducer from \"../reducers/authReducers\";\nimport postReducer from '../reducers/postReducer';\nimport recentPostsReducer from '../reducers/recentPostsReducer';\nimport myPostReducer from \"../reducers/myPostReducer\";\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            auth: authReducer,\n            posts:postReducer,\n            recent:recentPostsReducer,\n            myPosts: myPostReducer,\n            ...createForms({\n                addPost: InitialFeedback,\n                contact: ContactForm\n            })\n        }),\n        compose(\n            applyMiddleware(thunk, logger)\n        )\n    );\n    return store\n};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n<App />\n  </BrowserRouter>\n  , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}